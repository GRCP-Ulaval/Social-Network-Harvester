# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2018-07-12 20:39
from __future__ import unicode_literals

import SocialNetworkHarvester_v1p0.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('AspiraUser', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='checkins_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='comment_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='fan_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FBAccessToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_token', models.CharField(max_length=255)),
                ('expires', models.IntegerField(blank=True, null=True)),
                ('userProfile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbAccessToken', to='AspiraUser.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='FBApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('imageUrl', models.CharField(max_length=1024, null=True)),
                ('targetUrl', models.CharField(max_length=1024, null=True)),
                ('title', models.CharField(max_length=512, null=True)),
                ('type', models.CharField(max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
                ('created_time', models.DateTimeField(null=True)),
                ('deleted_time', models.DateTimeField(null=True)),
                ('message', models.TextField(null=True)),
                ('permalink_url', models.CharField(max_length=1024, null=True)),
                ('comment_count', models.IntegerField(null=True)),
                ('like_count', models.IntegerField(null=True)),
                ('last_reaction_harvested', models.DateTimeField(null=True)),
                ('last_comments_harvested', models.DateTimeField(null=True)),
                ('last_updated', models.DateTimeField(null=True)),
                ('error_on_update', models.BooleanField(default=False)),
                ('error_on_harvest', models.BooleanField(default=False)),
                ('attachment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbComments', to='Facebook.FBAttachment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FBEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('state', models.CharField(max_length=16, null=True)),
                ('street', models.CharField(max_length=512, null=True)),
                ('zip', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=225, unique=True)),
                ('category', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128, null=True)),
                ('username', models.CharField(max_length=64, null=True)),
                ('about', models.TextField(null=True)),
                ('cover', models.CharField(max_length=512, null=True)),
                ('current_location', models.CharField(max_length=512, null=True)),
                ('description_html', models.TextField(null=True)),
                ('emails', models.CharField(max_length=2048, null=True)),
                ('general_info', models.TextField(null=True)),
                ('link', models.CharField(max_length=4096, null=True)),
                ('members', models.TextField(null=True)),
                ('is_community_page', models.BooleanField(default=False)),
                ('is_unclaimed', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=256, null=True)),
                ('verification_status', models.CharField(max_length=64, null=True)),
                ('website', models.CharField(max_length=512, null=True)),
                ('checkins', models.IntegerField(null=True)),
                ('fan_count', models.IntegerField(null=True)),
                ('overall_star_rating', models.FloatField(null=True)),
                ('rating_count', models.IntegerField(null=True)),
                ('talking_about_count', models.IntegerField(null=True)),
                ('were_here_count', models.IntegerField(null=True)),
                ('birthday', models.CharField(max_length=128, null=True)),
                ('affiliation', models.CharField(max_length=225, null=True)),
                ('personal_info', models.TextField(null=True)),
                ('personal_interests', models.TextField(null=True)),
                ('built', models.CharField(max_length=64, null=True)),
                ('features', models.TextField(null=True)),
                ('mpg', models.CharField(max_length=256, null=True)),
                ('company_overview', models.TextField(null=True)),
                ('mission', models.TextField(null=True)),
                ('products', models.TextField(null=True)),
                ('founded', models.TextField(null=True)),
                ('general_manager', models.CharField(max_length=256, null=True)),
                ('price_range', models.CharField(max_length=16, null=True)),
                ('hours', models.TextField(null=True)),
                ('pharma_safety_info', models.TextField(null=True)),
                ('is_permanently_closed', models.BooleanField(default=False)),
                ('is_always_open', models.BooleanField(default=False)),
                ('network', models.CharField(max_length=512, null=True)),
                ('schedule', models.TextField(null=True)),
                ('season', models.CharField(max_length=64, null=True)),
                ('written_by', models.CharField(max_length=512, null=True)),
                ('awards', models.TextField(null=True)),
                ('directed_by', models.TextField(null=True)),
                ('genre', models.TextField(null=True)),
                ('plot_outline', models.TextField(null=True)),
                ('produced_by', models.TextField(null=True)),
                ('release_date', models.CharField(max_length=64, null=True)),
                ('screenplay_by', models.TextField(null=True)),
                ('starring', models.TextField(null=True)),
                ('studio', models.TextField(null=True)),
                ('artists_we_like', models.TextField(null=True)),
                ('band_interests', models.TextField(null=True)),
                ('band_members', models.CharField(max_length=4096, null=True)),
                ('bio', models.TextField(null=True)),
                ('booking_agent', models.TextField(null=True)),
                ('hometown', models.TextField(null=True)),
                ('influences', models.TextField(null=True)),
                ('press_contact', models.TextField(null=True)),
                ('record_label', models.TextField(null=True)),
                ('last_updated', models.DateTimeField(null=True)),
                ('error_on_update', models.BooleanField(default=False)),
                ('error_on_harvest', models.BooleanField(default=False)),
                ('last_feed_harvested', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
                ('admin_creator', models.CharField(max_length=128, null=True)),
                ('caption', models.CharField(max_length=1024, null=True)),
                ('created_time', models.DateTimeField(null=True)),
                ('deleted_time', models.DateTimeField(null=True)),
                ('description', models.TextField(null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_instagram_eligible', models.BooleanField(default=False)),
                ('link', models.CharField(max_length=4096, null=True)),
                ('message', models.TextField(null=True)),
                ('story', models.CharField(max_length=512, null=True)),
                ('name', models.CharField(max_length=256, null=True)),
                ('object_id', models.CharField(max_length=128, null=True)),
                ('permalink_url', models.CharField(max_length=256, null=True)),
                ('picture', models.CharField(max_length=2048, null=True)),
                ('source', models.CharField(max_length=1024, null=True)),
                ('status_type', models.CharField(max_length=64, null=True)),
                ('type', models.CharField(max_length=64, null=True)),
                ('updated_time', models.DateTimeField(null=True)),
                ('share_count', models.IntegerField(null=True)),
                ('like_count', models.IntegerField(null=True)),
                ('comment_count', models.IntegerField(null=True)),
                ('last_updated', models.DateTimeField(null=True)),
                ('error_on_update', models.BooleanField(default=False)),
                ('error_on_harvest', models.BooleanField(default=False)),
                ('last_comments_harvested', models.DateTimeField(null=True)),
                ('last_reaction_harvested', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=225, unique=True)),
                ('type', models.CharField(max_length=1)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('fbApplication', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBApplication')),
                ('fbEvent', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBEvent')),
                ('fbGroup', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBGroup')),
                ('fbPage', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBPage')),
                ('fbPhoto', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBPhoto')),
            ],
        ),
        migrations.CreateModel(
            name='FBReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='LIKE', max_length=10)),
                ('from_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('until_time', models.DateTimeField(null=True)),
                ('from_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reacted_to', to='Facebook.FBProfile')),
                ('to_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='Facebook.FBComment')),
                ('to_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='Facebook.FBPost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FBUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=225, unique=True)),
                ('name', models.CharField(max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(null=True)),
                ('updated_time', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='like_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
                ('fbComment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='like_counts', to='Facebook.FBComment')),
                ('fbPost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='like_counts', to='Facebook.FBPost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='overall_star_rating_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.FloatField()),
                ('fbPage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_star_rating_counts', to='Facebook.FBPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='rating_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
                ('fbPage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_counts', to='Facebook.FBPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='share_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
                ('fbPost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_counts', to='Facebook.FBPost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='talking_about_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
                ('fbPage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talking_about_counts', to='Facebook.FBPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='were_here_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
                ('fbPage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='were_here_counts', to='Facebook.FBPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='fbprofile',
            name='fbUser',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBUser'),
        ),
        migrations.AddField(
            model_name='fbprofile',
            name='fbVideo',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbProfile', to='Facebook.FBVideo'),
        ),
        migrations.AddField(
            model_name='fbpost',
            name='from_profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postedStatuses', to='Facebook.FBProfile'),
        ),
        migrations.AddField(
            model_name='fbpost',
            name='message_tags',
            field=models.ManyToManyField(related_name='taggedInPostMessages', to='Facebook.FBProfile'),
        ),
        migrations.AddField(
            model_name='fbpost',
            name='parent_post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_posts', to='Facebook.FBPost'),
        ),
        migrations.AddField(
            model_name='fbpost',
            name='to_profiles',
            field=models.ManyToManyField(related_name='targetedByStatuses', to='Facebook.FBProfile'),
        ),
        migrations.AddField(
            model_name='fbpage',
            name='featured_video',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featured_on_pages', to='Facebook.FBVideo'),
        ),
        migrations.AddField(
            model_name='fbpage',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facebook.FBLocation'),
        ),
        migrations.AddField(
            model_name='fbpage',
            name='parent_page',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Facebook.FBPage'),
        ),
        migrations.AddField(
            model_name='fbcomment',
            name='from_profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posted_comments', to='Facebook.FBProfile'),
        ),
        migrations.AddField(
            model_name='fbcomment',
            name='parentComment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbReplies', to='Facebook.FBComment'),
        ),
        migrations.AddField(
            model_name='fbcomment',
            name='parentPost',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fbComments', to='Facebook.FBPost'),
        ),
        migrations.AddField(
            model_name='fan_count',
            name='fbPage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fan_counts', to='Facebook.FBPage'),
        ),
        migrations.AddField(
            model_name='comment_count',
            name='fbComment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_counts', to='Facebook.FBComment'),
        ),
        migrations.AddField(
            model_name='comment_count',
            name='fbPost',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_counts', to='Facebook.FBPost'),
        ),
        migrations.AddField(
            model_name='checkins_count',
            name='fbPage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkins_counts', to='Facebook.FBPage'),
        ),
    ]
