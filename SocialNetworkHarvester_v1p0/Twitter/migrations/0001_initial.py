# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2018-07-12 16:12
from __future__ import unicode_literals

import SocialNetworkHarvester_v1p0.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='favorite_tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('ended', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='favourites_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='follower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('ended', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='followers_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='friends_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HashtagHarvester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_harvest_since', models.DateTimeField(blank=True, null=True)),
                ('_harvest_until', models.DateTimeField(blank=True, null=True)),
                ('_has_reached_begining', models.BooleanField(default=False)),
                ('_last_harvested', models.DateTimeField(blank=True, null=True)),
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvesters', to='Twitter.Hashtag')),
            ],
        ),
        migrations.CreateModel(
            name='listed_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='retweet_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='screen_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='statuses_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='time_zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.BigIntegerField(unique=True)),
                ('coordinates', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('text', models.TextField(max_length=255, null=True)),
                ('retweet_count', models.IntegerField(null=True)),
                ('possibly_sensitive', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=255, null=True)),
                ('lang', models.CharField(max_length=128)),
                ('withheld_copyright', models.BooleanField(default=False)),
                ('withheld_in_countries', models.CharField(max_length=255)),
                ('withheld_scope', models.CharField(max_length=32)),
                ('_last_updated', models.DateTimeField(null=True)),
                ('_last_retweeter_harvested', models.DateTimeField(null=True)),
                ('_error_on_update', models.BooleanField(default=False)),
                ('_error_on_retweet_harvest', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TWPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_ident', models.CharField(max_length=255, unique=True)),
                ('attributes', models.CharField(max_length=500, null=True)),
                ('bounding_box', models.CharField(max_length=500, null=True)),
                ('country', models.CharField(max_length=128, null=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=128, null=True)),
                ('place_type', models.CharField(max_length=128, null=True)),
                ('url', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TWUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=SocialNetworkHarvester_v1p0.models.djangoNow)),
                ('value', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TWUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('_ident', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('geo_enabled', models.BooleanField(default=False)),
                ('has_extended_profile', models.BooleanField(default=False)),
                ('is_translation_enabled', models.BooleanField(default=False)),
                ('is_translator', models.BooleanField(default=False)),
                ('lang', models.CharField(max_length=50, null=True)),
                ('location', models.CharField(max_length=255)),
                ('profile_background_color', models.CharField(max_length=50)),
                ('profile_background_image_url', models.CharField(max_length=500, null=True)),
                ('profile_image_url', models.CharField(max_length=1024)),
                ('protected', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('time_zone', models.CharField(max_length=255, null=True)),
                ('url', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(max_length=500, null=True)),
                ('statuses_count', models.IntegerField(null=True)),
                ('favourites_count', models.IntegerField(null=True)),
                ('followers_count', models.IntegerField(null=True)),
                ('friends_count', models.IntegerField(null=True)),
                ('listed_count', models.IntegerField(null=True)),
                ('_last_updated', models.DateTimeField(null=True)),
                ('_last_tweet_harvested', models.DateTimeField(null=True)),
                ('_last_friends_harvested', models.DateTimeField(null=True)),
                ('_last_followers_harvested', models.DateTimeField(null=True)),
                ('_last_fav_tweet_harvested', models.DateTimeField(null=True)),
                ('_error_on_update', models.BooleanField(default=False)),
                ('_has_duplicate', models.BooleanField(default=False)),
                ('_error_on_harvest', models.BooleanField(default=False)),
                ('_error_on_network_harvest', models.BooleanField(default=False)),
                ('_update_frequency', models.IntegerField(default=5)),
                ('_harvest_frequency', models.IntegerField(default=1)),
                ('_network_harvest_frequency', models.IntegerField(default=1)),
                ('_has_reached_begining', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='twurl',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='contributors',
            field=models.ManyToManyField(related_name='contributed_to', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='harvested_by',
            field=models.ManyToManyField(related_name='harvested_tweets', to='Twitter.HashtagHarvester'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='hashtags',
            field=models.ManyToManyField(related_name='tweets', to='Twitter.Hashtag'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='in_reply_to_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replied_by', to='Twitter.Tweet'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='in_reply_to_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replied_by', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Twitter.TWPlace'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='quoted_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quoted_by', to='Twitter.Tweet'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='retweet_of',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retweets', to='Twitter.Tweet'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='tweet',
            name='user_mentions',
            field=models.ManyToManyField(related_name='mentions', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='time_zone',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_zones', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='statuses_count',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses_counts', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='screen_name',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screen_names', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='retweet_count',
            name='tweet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retweet_counts', to='Twitter.Tweet'),
        ),
        migrations.AddField(
            model_name='name',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='listed_count',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listed_counts', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='friends_count',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_counts', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='followers_count',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers_counts', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='follower',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='follower',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='favourites_count',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites_counts', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='favorite_tweet',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_tweets', to='Twitter.TWUser'),
        ),
        migrations.AddField(
            model_name='favorite_tweet',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='Twitter.Tweet'),
        ),
        migrations.AddField(
            model_name='description',
            name='twuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descriptions', to='Twitter.TWUser'),
        ),
    ]
